<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.SalaryMapper">
    <select id="getSalaryList" resultMap="salaryMap.salaryResultMap" resultType="list">
        <![CDATA[
        	SELECT tmp.builderid,tmp.buildername,tmp.salarymoney,tmp.otherinfo,tmp.createtime,tmp.updatetime FROM ( SELECT ROW_NUMBER() OVER() AS R, builderid,b.name as buildername,b.shortname as buildershortname,b.showtype as buildershowtype,salarymoney, s.otherinfo, s.createtime, s.updatetime, s.projectid FROM salary s left join builder b on s.builderid = b.id where 1=1 order by ${orderValue}) AS tmp WHERE R > #{startIndex} and R <= #{endIndex} and tmp.projectid= #{projectid} and (tmp.buildername like #{filterValue} or tmp.buildershortname like #{filterValue}) and tmp.buildershowtype = '1'
        ]]>
    </select>
    
    <insert id="addSalary" parameterType="salary">
        insert into salary(builderid, projectid, salarymoney, otherinfo, createtime, updatetime)
        values(#{builderid}, #{projectid}, #{salarymoney}, #{otherinfo}, varchar(current_timestamp), varchar(current_timestamp))
    </insert>
    
    <update id="editSalary" parameterType="salary">
        update salary set
        salarymoney = #{salarymoney},
        otherinfo = #{otherinfo},
        updatetime = varchar(current_timestamp)  
        where builderid = #{builderid} and projectid = #{projectid}
    </update>
    
    <delete id="removeSalaries" parameterType="java.util.List">
        delete from salary where builderid in
          <foreach collection="list" index="index" item="tag" open="(" separator="," close=")">
		    #{tag}
		  </foreach>
		  and projectid = #{projectid}
    </delete>
    
    <select id="getTotalCount" resultType="int">
        <![CDATA[
        	SELECT count(tmp.builderid) FROM ( SELECT ROW_NUMBER() OVER() AS R, builderid,b.name as buildername,b.shortname as buildershortname,b.showtype as buildershowtype,s.salarymoney, s.otherinfo, s.createtime, s.updatetime, s.projectid FROM salary s left join builder b on s.builderid = b.id) AS tmp WHERE (tmp.buildername like #{filterValue} or tmp.buildershortname like #{filterValue}) and tmp.projectid = #{projectid} and tmp.buildershowtype = '1'
        ]]>
    </select>
    
    <select id="getSalaryByBuilderId" resultType="salary">
        <![CDATA[
        	SELECT builderid, salarymoney, otherinfo, createtime, updatetime FROM salary where builderid = #{builderId} and projectid = #{projectid}
        ]]>
    </select>
</mapper>