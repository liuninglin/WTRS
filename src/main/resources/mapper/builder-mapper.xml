<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BuilderMapper">
    <select id="getBuilderList" resultMap="builderMap.builderResultMap" resultType="list">
        <![CDATA[
        SELECT tmp1.id,
       tmp1.type,
       tmp1.name,
       tmp1.shortname,
       tmp1.age,
       tmp1.sex,
       tmp1.idcard,
       tmp1.hometown,
       tmp1.otherinfo,
       tmp1.createtime,
       tmp1.updatetime,
       tmp1.showtype
FROM
  ( SELECT ROW_NUMBER() OVER() AS R,
                        tmp.id,
                        tmp.type,
                        tmp.name,
                        tmp.shortname,
                        tmp.age,
                        tmp.sex,
                        tmp.idcard,
                        tmp.hometown,
                        tmp.otherinfo,
                        tmp.createtime,
                        tmp.updatetime,
                        tmp.showtype
   FROM
     (SELECT id, TYPE, name,
                       shortname,
                       pinyin,
                       age,
                       sex,
                       idcard,
                       hometown,
                       otherinfo,
                       createtime,
                       updatetime,
                       showtype
      FROM builder
      WHERE 1=1
        AND (name LIKE #{filterValue}
             OR hometown LIKE #{filterValue}
             OR idcard LIKE #{filterValue}
             OR shortname LIKE #{filterValue})
        AND showtype = #{showtype}
      ORDER BY ${orderValue}) AS tmp) AS tmp1
WHERE R > #{startIndex}
  AND R <= #{endIndex}
        ]]>
    </select>
    
    <insert id="addBuilder" parameterType="builder">
        insert into builder(type, name, shortname, age, sex, idcard, hometown, otherinfo, createtime, updatetime, showtype, pinyin)
        values(#{type}, #{name}, #{shortname}, #{age}, #{sex}, #{idcard}, #{hometown}, #{otherinfo}, varchar(current_timestamp), varchar(current_timestamp), '1', #{pinyin})
    </insert>
    
    <update id="editBuilder" parameterType="builder">
        update builder set
        type = #{type},
        name = #{name},
        shortname = #{shortname},
        age = #{age},
        sex = #{sex},
        idcard = #{idcard},
        hometown = #{hometown},
        otherinfo = #{otherinfo},
        showtype = '1',
        updatetime = varchar(current_timestamp)  
        where id = #{id}
    </update>
    
    <update id="removeBuilders" parameterType="java.util.List">
    	 update builder set
        showtype = '0',
        updatetime = varchar(current_timestamp)  
        where id in 
          <foreach collection="list" index="index" item="tag" open="(" separator="," close=")">
		    #{tag}
		  </foreach>
    </update>
    
    <update id="reStartBuilders" parameterType="java.util.List">
    	 update builder set
        showtype = '1',
        updatetime = varchar(current_timestamp)  
        where id in 
          <foreach collection="list" index="index" item="tag" open="(" separator="," close=")">
		    #{tag}
		  </foreach>
    </update>
    
    <select id="getTotalCount" resultType="int">
        <![CDATA[
SELECT count(id)
FROM builder
WHERE 1=1
  AND (name LIKE #{filterValue}
       OR hometown LIKE #{filterValue}
       OR idcard LIKE #{filterValue}
       OR shortname LIKE #{filterValue})
  AND showtype = #{showtype}
        ]]>
    </select>
    
    <select id="getBuilderByBuilderId" resultType="builder">
        <![CDATA[
        	SELECT id, type, name, shortname, age, sex, idcard, hometown, otherinfo, createtime, updatetime, showtype FROM builder where id = #{builderId}
        ]]>
    </select>
    
    <select id="getBuilderByBuilderName" resultType="builder">
        <![CDATA[
        	SELECT id, type, name, shortname, age, sex, idcard, hometown, otherinfo, createtime, updatetime, showtype FROM builder where name = #{builderName}
        ]]>
    </select>
    
    <select id="getBuilderIdByBuilderName" resultType="int">
        <![CDATA[
        	SELECT id FROM builder where name = #{builderName}
        ]]>
    </select>
    
    <select id="getBuilderListByFilterValue" resultMap="builderMap.builderResultMap" resultType="list">
        <![CDATA[
        	select id,name,type,shortname from builder where (shortname like #{filterValue} or name like #{filterValue}) and showtype = '1'
        ]]>
    </select>
    
    <select id="getBuilderListByFilterValueForTimework" resultMap="builderMap.builderResultMap" resultType="list">
        <![CDATA[
        	select id,name,type,shortname from builder where (shortname like #{filterValue} or name like #{filterValue}) and showtype = '1' and (type = 'timework' or type = 'all')
        ]]>
    </select>
    
    <select id="getBuilderListByFilterValueForPackagework" resultMap="builderMap.builderResultMap" resultType="list">
        <![CDATA[
        	select id,name,type,shortname from builder where (shortname like #{filterValue} or name like #{filterValue}) and showtype = '1' and (type = 'packagework' or type = 'all')
        ]]>
    </select>
    
    <select id="getBuilderNumForAll" resultType="int">
        <![CDATA[
         	select count(x.name) from (select distinct b.name from builder b left join workday w on b.id = w.builderid left join packagework p on p.builderid = b.id left join FOOD f on f.builderid = b.id left join debt d on d.builderid = b.id where f.projectid = #{projectid} or w.projectid = #{projectid} or p.projectid = #{projectid} or d.projectid = #{projectid}) x
        ]]>
    </select>
    
    <select id="getBuilderListByFilterValueForTimeworkForWorkdayCheckin" resultMap="builderMap.builderResultMap" resultType="list">
        <![CDATA[
SELECT id,name,TYPE,shortname
FROM builder
WHERE (shortname LIKE #{filterValue}
       OR name LIKE #{filterValue})
  AND showtype = '1'
  AND (TYPE = 'timework'
       OR TYPE = 'all')
  AND id NOT IN
    (SELECT builderid
     FROM workday
     WHERE buildingsiteid = #{buildingsiteid}
       AND workyear = #{workyear}
       AND workmonth = #{workmonth})
        ]]>
    </select>
</mapper>