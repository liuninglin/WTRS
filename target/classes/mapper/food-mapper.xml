<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.FoodMapper">
    <select id="getFoodList" resultMap="foodMap.foodResultMap" resultType="list">
        <![CDATA[
        SELECT tmp2.builderid,
       tmp2.buildername,
       tmp2.buildershortname,
       tmp2.buildingsiteid,
       tmp2.buildingsitename,
       tmp2.buildingsiteshortname
FROM   (SELECT Row_number()
                 OVER() AS R,
               tmp1.buildername,
               tmp1.buildershortname,
               tmp1.builderid,
               tmp1.buildingsiteid,
               tmp1.buildingsitename,
               tmp1.buildingsiteshortname
        FROM   (SELECT DISTINCT tmp.builderid,
                                tmp.buildername,
                                tmp.buildershortname,
                                tmp.buildingsiteid,
                                tmp.buildingsitename,
                                tmp.buildingsiteshortname
                FROM   (SELECT b.name       AS buildername,
                               b.shortname  AS buildershortname,
                               b.id         AS builderid,
                               bs.name      AS buildingsitename,
                               bs.shortname AS buildingsiteshortname,
                               bs.id        AS buildingsiteid,
                               f.foodyear,
                               f.foodmonth,
                               f.projectid
                        FROM   food f
                               LEFT JOIN builder b
                                      ON f.builderid = b.id
                               LEFT JOIN buildingsite bs
                                      ON f.buildingsiteid = bs.id
                        WHERE  1 = 1
                               AND b.showtype = '1'
                               AND bs.showtype = '1') AS tmp
                WHERE  tmp.buildingsiteid = #{buildingsiteid}
                       AND tmp.projectid = #{projectid}
                       AND ( tmp.buildername LIKE #{filterValue}
                              OR tmp.buildershortname LIKE #{filterValue} )
                ORDER  BY ${orderValue}) AS tmp1) AS tmp2
WHERE  R > #{startIndex} and R <= #{endIndex}
        
        ]]>
    </select>
    
    <select id="getFoodDetailList" resultMap="fooddetailMap.fooddetailResultMap" resultType="list">
        <![CDATA[
        select tmp.foodyear,tmp.foodmonth,tmp.foodmoney,tmp.otherinfo,tmp.createtime,tmp.updatetime from (select ROW_NUMBER() OVER() AS R,b.id as builderid,bs.id as buildingsiteid,f.foodyear,f.foodmonth,f.foodmoney,f.otherinfo,f.createtime,f.updatetime,f.projectid from food f left join builder b on f.builderid = b.id left join buildingsite bs on f.buildingsiteid = bs.id where 1=1 and b.showtype = '1' and bs.showtype = '1') as tmp where tmp.buildingsiteid = #{buildingsiteid} and tmp.builderid = #{builderid} and tmp.projectid = #{projectid}
        ]]>
    </select>
    
    <insert id="addFood" parameterType="food">
        insert into food(builderid, buildingsiteid, projectid, foodyear, foodmonth, foodmoney, otherinfo, createtime, updatetime)
        values(#{builderid}, #{buildingsiteid}, #{projectid}, #{foodyear}, #{foodmonth}, #{foodmoney}, #{otherinfo}, varchar(current_timestamp), varchar(current_timestamp))
    </insert>
    
    <update id="editFoodInfo" parameterType="food">
        update food set
        foodmoney = #{foodmoney},
        otherinfo = #{otherinfo},
        updatetime = varchar(current_timestamp) 
        where builderid = #{builderid} and buildingsiteid = #{buildingsiteid} and foodyear = #{foodyear} and foodmonth = #{foodmonth} 
    </update>
    
    <update id="editFood" parameterType="food">
        update food set
        foodmoney = #{foodmoney},
        updatetime = varchar(current_timestamp)  
        where builderid = #{builderid} and buildingsiteid = #{buildingsiteid} and foodyear = #{foodyear} and foodmonth = #{foodmonth}
    </update>
    
    <update id="editFoodDetailInfo" parameterType="food">
        update food set
        otherinfo = #{otherinfo},
        updatetime = varchar(current_timestamp)  
        where buildingsiteid = #{buildingsiteid} and builderid = #{builderid} 
        and foodyear = #{foodyear} and foodmonth = #{foodmonth}
    </update>
    
    <delete id="removeFood" parameterType="java.util.List">
        delete from food where builderid = #{builderid} and buildingsiteid = #{buildingsiteid} and foodyear = #{foodyear} and foodmonth = #{foodmonth}
    </delete>
    
    <select id="getTotalCount" resultType="int">
        <![CDATA[
        select count(x.builderid) from (select distinct tmp.builderid,tmp.buildername,tmp.buildershortname,tmp.buildingsiteid,tmp.buildingsitename,tmp.buildingsiteshortname from (select ROW_NUMBER() OVER() AS R,b.name as buildername,b.shortname as buildershortname,b.id as builderid,bs.name as buildingsitename,bs.shortname as buildingsiteshortname,bs.id as buildingsiteid,f.foodyear,f.foodmonth,f.projectid from food f left join builder b on f.builderid = b.id left join buildingsite bs on f.buildingsiteid = bs.id where 1=1 and b.showtype = '1' and bs.showtype = '1') as tmp where (tmp.buildername like #{filterValue} or tmp.buildershortname like #{filterValue}) and tmp.buildingsiteid = #{buildingsiteid} and tmp.projectid = #{projectid}) as x
        ]]>
    </select>
    
     <select id="getFoodByFoodDetail" resultType="food">
        <![CDATA[
        	SELECT builderid, buildingsiteid, foodyear, foodmonth, foodmoney, otherinfo, createtime, updatetime FROM food where builderid = #{builderid} and buildingsiteid = #{buildingsiteid} and foodyear = #{foodyear} and foodmonth = #{foodmonth}
        ]]>
    </select>
    
    <select id="getFoodListForAll" resultMap="foodMap.foodResultMap" resultType="list">
        <![CDATA[
        	select distinct tmp.builderid,tmp.buildername,tmp.buildershortname,tmp.buildingsiteid,tmp.buildingsitename,tmp.buildingsiteshortname from (select ROW_NUMBER() OVER() AS R,b.name as buildername,b.shortname as buildershortname,b.id as builderid,bs.name as buildingsitename,bs.shortname as buildingsiteshortname,bs.id as buildingsiteid,f.foodyear,f.foodmonth,f.projectid from food f left join builder b on f.builderid = b.id left join buildingsite bs on f.buildingsiteid = bs.id where 1=1 and b.showtype = '1' and bs.showtype = '1') as tmp where R > #{startIndex} and R <= #{endIndex} and (tmp.buildername like #{filterValue} or tmp.buildershortname like #{filterValue}) and tmp.projectid = #{projectid}  order by ${orderValue}
        ]]>
    </select>
    
    <select id="getFoodDetailListForAll" resultMap="fooddetailMap.fooddetailResultMap" resultType="list">
        <![CDATA[
        	select sum(double(tmp.foodmoney)) as foodmoney,tmp.buildingsiteid,tmp.buildingsitename,tmp.buildingsiteshortname from (select ROW_NUMBER() OVER() AS R,b.id as builderid,bs.id as buildingsiteid,bs.name as buildingsitename, bs.shortname as buildingsiteshortname, f.foodyear,f.foodmonth,f.foodmoney,f.otherinfo,f.createtime,f.updatetime,f.projectid from food f left join builder b on f.builderid = b.id left join buildingsite bs on f.buildingsiteid = bs.id where 1=1 and b.showtype = '1' and bs.showtype = '1') as tmp where tmp.builderid = #{builderid} and tmp.projectid = #{projectid} group by tmp.builderid,tmp.buildingsiteid,tmp.buildingsitename,tmp.buildingsiteshortname
        ]]>
    </select>
    
    <select id="getTotalCountForAll" resultType="int">
        <![CDATA[
        	select count(x.builderid) from (select distinct tmp.builderid,tmp.buildername,tmp.buildershortname,tmp.buildingsiteid,tmp.buildingsitename,tmp.buildingsiteshortname from (select ROW_NUMBER() OVER() AS R,b.name as buildername,b.shortname as buildershortname,b.id as builderid,bs.name as buildingsitename,bs.shortname as buildingsiteshortname,bs.id as buildingsiteid,f.foodyear,f.foodmonth,f.projectid from food f left join builder b on f.builderid = b.id left join buildingsite bs on f.buildingsiteid = bs.id where 1=1 and b.showtype = '1' and bs.showtype = '1') as tmp where (tmp.buildername like #{filterValue} or tmp.buildershortname like #{filterValue}) and tmp.projectid = #{projectid}) as x
        ]]>
    </select>
    
    <select id="getFoodDetailInfo" resultType="fooddetail">
        <![CDATA[
        	select otherinfo from food where builderid = ${builderid} and buildingsiteid = ${buildingsiteid} and foodyear = #{foodyear} and foodmonth = #{foodmonth}
        ]]>
    </select>
</mapper>